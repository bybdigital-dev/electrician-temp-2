# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      # NEW: create a unique build version like 20250909-132045-abc1234
      - name: Set build version
        run: echo "BUILD_VERSION=$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA::7}" >> $GITHUB_ENV

      # NEW: replace placeholder tokens in .html and .css, and write version.json
      - name: Inject build version into asset URLs
        shell: bash
        run: |
          set -euo pipefail

          # Replace __BUILD_VERSION__ in HTML and CSS files
          find . -type f \( -name "*.html" -o -name "*.css" \) -print0 \
            | xargs -0 sed -i "s/__BUILD_VERSION__/${BUILD_VERSION}/g"

          # Optional: version file for auto-reload scripts
          echo "{\"version\":\"${BUILD_VERSION}\"}" > version.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository (post-replacement)
          path: './'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
